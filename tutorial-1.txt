Accessibility Landmarks 
Accessibility Buttons & Links
Accessibility Role, Name & Value
Accessibility Color Contrast
Accessibility Meaningful & Decorative Images
Accessibility Descriptive Texts for Images
Accessibility Link States
Accessibility Link Text


1) How can we achieve accessibility improvement using HTML?
2) What are the key practices or techniques to make web pages more accessible with HTML alone?
3) In what way does the use of HTML impact web accessibility, both positively and negatavily?
4) Are the any common practices that uniintentionally hinder accessibility?
5) Whaich specific html tags and attribute are commonly used to enhance accessibilty, and how dothey contribute to creating more accessible web experience?

CSS Question:
6) Can css affect web accessibility?
7) How can the use of css affect the accesibilityof a website?
8) Are there specific practices in css that can improve or hinder accessibility, and how might there be reflected in accessibilityaudits like lighthouse?
   How does css influence a lighthouse scroe?
8) Wahat sre various ways css usage can impact a websites Lighthouse Score? Are there any performance,accessibilty or best practices related to css that should be mindful of to ensure optimal Lighthouse score?
9) what are the efficient font loading strategies for secondary font, specifically when a website uses a primary font for most of the page and secondary font that is only applied in a specific section ( which is not 
   initially in the viewport)?What are the 
10) could you explain in CSS box model and how it can be used to structure and design a web page effectively ? what are the key aspects of the box model that developers need to consider for layout and styling?
11) how would you design a theme based web application (e.g.with light, dark,a custom themes) at an architectural level,  ensuring that theme switching is handled entirely using CSS without the need for Java Script? what CSS technique and strategies would be required to manage multiple themes while maintaining performance and scalability?



=============
1) role : ARIA roles define the purpose or type of an element, <div role="button">Submit</div>
2) landmark
3) aria-label : Provides a text description for elements (e.g., icons). <button aria-label="Close">X</button>
4) aria describe
5) aria descrived by
6) aria-labedby
7) aria-live:  For dynamic content updates, such as alerts or notifications. <div aria-hidden="true">This will be ignored by screen readers.</div>
8) aria-pressed: Indicate the state of interactive elements like form fields or buttons
9) aria-expanded: Indicates if an element is expanded or collapsed. <button aria-expanded="false">Menu</button>
10) aria-hidden: Hides an element from screen readers. <div aria-hidden="true">This will be ignored by screen readers.</div>
11) aria-checked:  Specifies the state of a checkbox or toggle button. <input type="checkbox" aria-checked="false">
12) aria-required: aria-required is useful tag to notify the screenreader users about which input fields are 'required' <input type="text" required aria-required="true" />











